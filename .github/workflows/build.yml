##############################################################################
## altar build script - v1 - @ENDESGA - 2025 - CC0 - foss forever
#######

name: build
on: workflow_dispatch
permissions: { contents: write }

env:
  PROGRAM_NAME: "formatter"
  PROGRAM_VERSION: "0.3.0"

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: setup structure
        shell: bash
        run: |
          git clone https://github.com/H-language/${{ env.PROGRAM_NAME }}.git projects/${{ env.PROGRAM_NAME }}

      - name: download altar
        shell: bash
        run: |
          curl -L https://github.com/H-language/altar/releases/latest/download/altar${{ runner.os == 'Windows' && '.exe' || '' }} -O
          
      - name: setup altar project
        shell: bash
        run: |
          ${{ runner.os == 'Linux' && 'chmod +x altar' || '' }}
          ./altar${{ runner.os == 'Windows' && '.exe' || '' }} libraries clone H-language/H tools install gcc projects setup ${{ env.PROGRAM_NAME }} exit
          
      - name: compile
        shell: bash
        run: |
          cd projects/${{ env.PROGRAM_NAME }} && ./compile_release.${{ runner.os == 'Windows' && 'bat' || 'sh' }} && cd ../..
          
      #------- UPLOAD FOR RELEASE -------
      - name: upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROGRAM_NAME }}-${{ runner.os }}
          path: projects/${{ env.PROGRAM_NAME }}/${{ env.PROGRAM_NAME }}${{ runner.os == 'Windows' && '.exe' || '' }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with: { path: artifacts/ }
        
      - uses: softprops/action-gh-release@v2
        with:
          files: artifacts/*/*
          name: "download ${{ env.PROGRAM_NAME }}"
          tag_name: "${{ env.PROGRAM_VERSION }}"
          body: |
            # version ${{ env.PROGRAM_VERSION }}

            download from the appropriate link for your operating system:
            
            ## [${{ env.PROGRAM_NAME }} for Linux](https://github.com/${{ github.repository }}/releases/download/${{ env.PROGRAM_VERSION }}/${{ env.PROGRAM_NAME }})
            
            ## [${{ env.PROGRAM_NAME }} for Windows](https://github.com/${{ github.repository }}/releases/download/${{ env.PROGRAM_VERSION }}/${{ env.PROGRAM_NAME }}.exe)
